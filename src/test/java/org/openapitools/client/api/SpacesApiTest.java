/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Get2SpacesByCreatorIdsResponse;
import org.openapitools.client.model.Get2SpacesIdBuyersResponse;
import org.openapitools.client.model.Get2SpacesIdResponse;
import org.openapitools.client.model.Get2SpacesIdTweetsResponse;
import org.openapitools.client.model.Get2SpacesResponse;
import org.openapitools.client.model.Get2SpacesSearchResponse;
import org.openapitools.client.model.Problem;
import java.util.Set;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SpacesApi
 */
@Disabled
public class SpacesApiTest {

    private final SpacesApi api = new SpacesApi();

    /**
     * Space lookup by Space ID
     *
     * Returns a variety of information about the Space specified by the requested ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findSpaceByIdTest() throws ApiException {
        String id = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesIdResponse response = api.findSpaceById(id, spaceFields, expansions, userFields, topicFields);
        // TODO: test validations
    }

    /**
     * Space lookup by their creators
     *
     * Returns a variety of information about the Spaces created by the provided User IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findSpacesByCreatorIdsTest() throws ApiException {
        List<String> userIds = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesByCreatorIdsResponse response = api.findSpacesByCreatorIds(userIds, spaceFields, expansions, userFields, topicFields);
        // TODO: test validations
    }

    /**
     * Space lookup up Space IDs
     *
     * Returns a variety of information about the Spaces specified by the requested IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findSpacesByIdsTest() throws ApiException {
        List<String> ids = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesResponse response = api.findSpacesByIds(ids, spaceFields, expansions, userFields, topicFields);
        // TODO: test validations
    }

    /**
     * Search for Spaces
     *
     * Returns Spaces that match the provided query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchSpacesTest() throws ApiException {
        String query = null;
        String state = null;
        Integer maxResults = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesSearchResponse response = api.searchSpaces(query, state, maxResults, spaceFields, expansions, userFields, topicFields);
        // TODO: test validations
    }

    /**
     * Retrieve the list of Users who purchased a ticket to the given space
     *
     * Retrieves the list of Users who purchased a ticket to the given space
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spaceBuyersTest() throws ApiException {
        String id = null;
        String paginationToken = null;
        Integer maxResults = null;
        Set<String> userFields = null;
        Set<String> expansions = null;
        Set<String> tweetFields = null;
        Get2SpacesIdBuyersResponse response = api.spaceBuyers(id, paginationToken, maxResults, userFields, expansions, tweetFields);
        // TODO: test validations
    }

    /**
     * Retrieve Tweets from a Space.
     *
     * Retrieves Tweets shared in the specified Space.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spaceTweetsTest() throws ApiException {
        String id = null;
        Integer maxResults = null;
        Set<String> tweetFields = null;
        Set<String> expansions = null;
        Set<String> mediaFields = null;
        Set<String> pollFields = null;
        Set<String> userFields = null;
        Set<String> placeFields = null;
        Get2SpacesIdTweetsResponse response = api.spaceTweets(id, maxResults, tweetFields, expansions, mediaFields, pollFields, userFields, placeFields);
        // TODO: test validations
    }

}
