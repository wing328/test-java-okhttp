/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BookmarkAddRequest;
import org.openapitools.client.model.BookmarkMutationResponse;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Get2UsersIdBookmarksResponse;
import org.openapitools.client.model.Problem;
import java.util.Set;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BookmarksApi
 */
@Disabled
public class BookmarksApiTest {

    private final BookmarksApi api = new BookmarksApi();

    /**
     * Bookmarks by User
     *
     * Returns Tweet objects that have been bookmarked by the requesting User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUsersIdBookmarksTest() throws ApiException {
        String id = null;
        Integer maxResults = null;
        String paginationToken = null;
        Set<String> tweetFields = null;
        Set<String> expansions = null;
        Set<String> mediaFields = null;
        Set<String> pollFields = null;
        Set<String> userFields = null;
        Set<String> placeFields = null;
        Get2UsersIdBookmarksResponse response = api.getUsersIdBookmarks(id, maxResults, paginationToken, tweetFields, expansions, mediaFields, pollFields, userFields, placeFields);
        // TODO: test validations
    }

    /**
     * Add Tweet to Bookmarks
     *
     * Adds a Tweet (ID in the body) to the requesting User&#39;s (in the path) bookmarks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUsersIdBookmarksTest() throws ApiException {
        String id = null;
        BookmarkAddRequest bookmarkAddRequest = null;
        BookmarkMutationResponse response = api.postUsersIdBookmarks(id, bookmarkAddRequest);
        // TODO: test validations
    }

    /**
     * Remove a bookmarked Tweet
     *
     * Removes a Tweet from the requesting User&#39;s bookmarked Tweets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdBookmarksDeleteTest() throws ApiException {
        String id = null;
        String tweetId = null;
        BookmarkMutationResponse response = api.usersIdBookmarksDelete(id, tweetId);
        // TODO: test validations
    }

}
